{"brainfuck":"# 版权 @2019 凹语言 作者。保留所有权利。\r\n\r\nfn main() {\r\n\t# print hi\r\n\tconst code = \"++++++++++[>++++++++++<-]>++++.+.\"\r\n\tvm := NewBrainFuck(code)\r\n\tvm.Run()\r\n}\r\n\r\ntype BrainFuck struct {\r\n\tmem  :[30000]byte\r\n\tcode :string\r\n\tpos  :int\r\n\tpc   :int\r\n}\r\n\r\nfn NewBrainFuck(code: string) => *BrainFuck {\r\n\treturn &BrainFuck{code: code}\r\n}\r\n\r\nfn BrainFuck.Run() {\r\n\tfor ; this.pc != len(this.code); this.pc++ {\r\n\t\tswitch x := this.code[this.pc]; x {\r\n\t\tcase '>':\r\n\t\t\tthis.pos++\r\n\t\tcase '<':\r\n\t\t\tthis.pos--\r\n\t\tcase '+':\r\n\t\t\tthis.mem[this.pos]++\r\n\t\tcase '-':\r\n\t\t\tthis.mem[this.pos]--\r\n\t\tcase '[':\r\n\t\t\tif this.mem[this.pos] == 0 {\r\n\t\t\t\tthis.loop(1)\r\n\t\t\t}\r\n\t\tcase ']':\r\n\t\t\tif this.mem[this.pos] != 0 {\r\n\t\t\t\tthis.loop(-1)\r\n\t\t\t}\r\n\t\tcase '.':\r\n\t\t\tprint(rune(this.mem[this.pos]))\r\n\t\tcase ',':\r\n\t\t\t# TODO: support read byte\r\n\t\t}\r\n\t}\r\n\treturn\r\n}\r\n\r\nfn BrainFuck.loop(inc: int) {\r\n\tfor i := inc; i != 0; this.pc += inc {\r\n\t\tswitch this.code[this.pc+inc] {\r\n\t\tcase '[':\r\n\t\t\ti++\r\n\t\tcase ']':\r\n\t\t\ti--\r\n\t\t}\r\n\t}\r\n}\r\n","closure":"# 版权 @2019 凹语言 作者。保留所有权利。\r\n\r\ntype FP fn (i: i32) => i32\r\n\r\ntype ST struct {\r\n\ti: i32\r\n}\r\n\r\nfn ST.meth(p: i32) => i32 {\r\n\tthis.i += p\r\n\treturn this.i\r\n}\r\n\r\nvar g_f: FP\r\n\r\nfn main() {\t\r\n\tvar o ST\r\n\to.i = 11\r\n\tg_f = o.meth\r\n\tprintln(g_f(11))  //22\r\n\tprintln(o.i)  //22\r\n\t\r\n\tn := i32(21)\r\n\tg_f = fn(i: i32) => i32 {\r\n\t\tn += i\r\n\t\treturn n\r\n\t}\r\n\tprintln(g_f(22))  //43\r\n\tprintln(n)  //43\r\n\t\r\n\tfn(i: i32) {\r\n\t\tn += i\r\n\t}(22)\r\n\tprintln(n)  //65\r\n\t\r\n\tg_f = Double\r\n\tprintln(g_f(13))  //26\r\n}\r\n\r\nfn Double(i: i32) => i32 {\r\n\treturn i * 2\r\n}\r\n","count":"# 版权 @2019 凹语言 作者。保留所有权利。\r\n\r\nfn main() {\r\n  print(\"30以内的质数：\")\r\n\tfor n := 2; n <= 30; n = n + 1 {\r\n\t\tvar isPrime int = 1\r\n\t\tfor i := 2; i*i <= n; i = i + 1 {\r\n\t\t\tif x := n % i; x == 0 {\r\n\t\t\t\tisPrime = 0\r\n\t\t\t}\r\n\t\t}\r\n\t\tif isPrime != 0 {\r\n\t\t\tprint(n)\r\n      if n != 29 {\r\n        print(\"、\")\r\n      }\r\n\t\t}\r\n\t}\r\n}","heart":"# 版权 @2019 凹语言 作者。保留所有权利。\r\n\r\nfn main() {\r\n  a := 0.0\r\n  for y := 1.5; y > -1.5; y = y - 0.15 {\r\n    for x := -1.5; x < 1.5; x = x + 0.07 {\r\n      a = x*x + y*y - 1.0\r\n      if a*a*a < x*x*y*y*y {\r\n        print(\"@\")\r\n      } else {\r\n        print(\" \")\r\n      }\r\n    }\r\n    println()\r\n  }\r\n}","hello":"# 版权 @2019 凹语言 作者。保留所有权利。\r\n\r\nimport \"fmt\"\r\nimport \"runtime\"\r\n\r\nfn main {\r\n\tprintln(\"你好，凹语言！\", runtime.WAOS)\r\n\tprintln(add(40, 2))\r\n\r\n\tfmt.Println(1+1)\r\n}\r\n\r\nfn add(a: i32, b: i32) => i32 {\r\n\treturn a+b\r\n}"}