{"brainfuck":"# 版权 @2019 凹语言 作者。保留所有权利。\n\nfn main() {\n\t# print hi\n\tconst code = \"++++++++++[>++++++++++<-]>++++.+.\"\n\tvm := NewBrainFuck(code)\n\tvm.Run()\n}\n\ntype BrainFuck struct {\n\tmem  :[30000]byte\n\tcode :string\n\tpos  :int\n\tpc   :int\n}\n\nfn NewBrainFuck(code: string) => *BrainFuck {\n\treturn &BrainFuck{code: code}\n}\n\nfn BrainFuck.Run() {\n\tfor ; this.pc != len(this.code); this.pc++ {\n\t\tswitch x := this.code[this.pc]; x {\n\t\tcase '>':\n\t\t\tthis.pos++\n\t\tcase '<':\n\t\t\tthis.pos--\n\t\tcase '+':\n\t\t\tthis.mem[this.pos]++\n\t\tcase '-':\n\t\t\tthis.mem[this.pos]--\n\t\tcase '[':\n\t\t\tif this.mem[this.pos] == 0 {\n\t\t\t\tthis.loop(1)\n\t\t\t}\n\t\tcase ']':\n\t\t\tif this.mem[this.pos] != 0 {\n\t\t\t\tthis.loop(-1)\n\t\t\t}\n\t\tcase '.':\n\t\t\tprint(rune(this.mem[this.pos]))\n\t\tcase ',':\n\t\t\t# TODO: support read byte\n\t\t}\n\t}\n\treturn\n}\n\nfn BrainFuck.loop(inc: int) {\n\tfor i := inc; i != 0; this.pc += inc {\n\t\tswitch this.code[this.pc+inc] {\n\t\tcase '[':\n\t\t\ti++\n\t\tcase ']':\n\t\t\ti--\n\t\t}\n\t}\n}\n","count":"# 版权 @2019 凹语言 作者。保留所有权利。\n\nfn main() {\n  print(\"30以内的质数：\")\n\tfor n := 2; n <= 30; n = n + 1 {\n\t\tvar isPrime int = 1\n\t\tfor i := 2; i*i <= n; i = i + 1 {\n\t\t\tif x := n % i; x == 0 {\n\t\t\t\tisPrime = 0\n\t\t\t}\n\t\t}\n\t\tif isPrime != 0 {\n\t\t\tprint(n)\n      if n != 29 {\n        print(\"、\")\n      }\n\t\t}\n\t}\n}","heart":"# 版权 @2019 凹语言 作者。保留所有权利。\n\nfn main() {\n  a := 0.0\n  for y := 1.5; y > -1.5; y = y - 0.15 {\n    for x := -1.5; x < 1.5; x = x + 0.07 {\n      a = x*x + y*y - 1.0\n      if a*a*a < x*x*y*y*y {\n        print(\"@\")\n      } else {\n        print(\" \")\n      }\n    }\n    println()\n  }\n}","hello":"# 版权 @2019 凹语言 作者。保留所有权利。\n\nimport \"fmt\"\nimport \"runtime\"\n\nfn main {\n\tprintln(\"你好，凹语言！\", runtime.WAOS)\n\tprintln(add(40, 2))\n\n\tfmt.Println(1+1)\n}\n\nfn add(a: i32, b: i32) => i32 {\n\treturn a+b\n}"}